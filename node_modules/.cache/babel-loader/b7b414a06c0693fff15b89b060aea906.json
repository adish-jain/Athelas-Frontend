{"ast":null,"code":"var _jsxFileName = \"/Users/adish/Desktop/Athelas-Coding-Test/Frontend/src/UploadImage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadImage(props) {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"file\",\n    id: \"myFile\",\n    name: \"filename\",\n    accept: \"image/*\",\n    onChange: e => handleProfileImageUpload(e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\n\n_c = UploadImage;\n\nfunction handleProfileImageUpload(e) {\n  let selectedImage = e.target.files[0];\n\n  if (selectedImage.size > 5000000) {\n    console.log(\"image too big\");\n  } else {\n    saveProfileImage(selectedImage);\n  }\n}\n\nasync function saveProfileImage(selectedImage) {\n  const toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n\n  let data = {\n    requestedAPI: \"saveProfileImage\",\n    imageFile: await toBase64(selectedImage)\n  }; //   await fetch(\"/api/endpoint\", {\n  //     method: \"POST\",\n  //     headers: new Headers({\n  //       \"Content-Type\": \"application/json\",\n  //     }),\n  //     body: JSON.stringify(data),\n  //   })\n\n  axios.get(`http://localhost:3001/testdata`) // .then(res => {\n  //     console.log(res.data)\n  // })\n  .then(async res => {\n    let resJSON = await res.json(); //   let url = resJSON.url;\n\n    console.log(\"success\");\n  }).catch(error => {\n    console.log(error);\n    console.log(\"upload failed.\");\n  });\n}\n\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["UploadImage","props","e","handleProfileImageUpload","selectedImage","target","files","size","console","log","saveProfileImage","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","data","requestedAPI","imageFile","axios","get","then","res","resJSON","json","catch"],"sources":["/Users/adish/Desktop/Athelas-Coding-Test/Frontend/src/UploadImage.js"],"sourcesContent":["function UploadImage(props) {\n  return (\n    <input\n      type=\"file\"\n      id=\"myFile\"\n      name=\"filename\"\n      accept=\"image/*\"\n      onChange={(e) => handleProfileImageUpload(e)}\n    />\n  );\n}\n\nfunction handleProfileImageUpload(e) {\n  let selectedImage = e.target.files[0];\n  if (selectedImage.size > 5000000) {\n    console.log(\"image too big\");\n  } else {\n    saveProfileImage(selectedImage);\n  }\n}\n\nasync function saveProfileImage(selectedImage) {\n  const toBase64 = (file) =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n\n  let data = {\n    requestedAPI: \"saveProfileImage\",\n    imageFile: await toBase64(selectedImage),\n  };\n\n//   await fetch(\"/api/endpoint\", {\n//     method: \"POST\",\n//     headers: new Headers({\n//       \"Content-Type\": \"application/json\",\n//     }),\n//     body: JSON.stringify(data),\n//   })\n    axios.get(`http://localhost:3001/testdata`)\n    // .then(res => {\n    //     console.log(res.data)\n    // })\n    .then(async (res) => {\n      let resJSON = await res.json();\n    //   let url = resJSON.url;\n      console.log(\"success\")\n    })\n    .catch((error) => {\n      console.log(error);\n      console.log(\"upload failed.\");\n    });\n}\n\nexport default UploadImage;\n"],"mappings":";;;AAAA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;EAC1B,oBACE;IACE,IAAI,EAAC,MADP;IAEE,EAAE,EAAC,QAFL;IAGE,IAAI,EAAC,UAHP;IAIE,MAAM,EAAC,SAJT;IAKE,QAAQ,EAAGC,CAAD,IAAOC,wBAAwB,CAACD,CAAD;EAL3C;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;KAVQF,W;;AAYT,SAASG,wBAAT,CAAkCD,CAAlC,EAAqC;EACnC,IAAIE,aAAa,GAAGF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB;;EACA,IAAIF,aAAa,CAACG,IAAd,GAAqB,OAAzB,EAAkC;IAChCC,OAAO,CAACC,GAAR,CAAY,eAAZ;EACD,CAFD,MAEO;IACLC,gBAAgB,CAACN,aAAD,CAAhB;EACD;AACF;;AAED,eAAeM,gBAAf,CAAgCN,aAAhC,EAA+C;EAC7C,MAAMO,QAAQ,GAAIC,IAAD,IACf,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC/B,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;IACAD,MAAM,CAACE,aAAP,CAAqBN,IAArB;;IACAI,MAAM,CAACG,MAAP,GAAgB,MAAML,OAAO,CAACE,MAAM,CAACI,MAAR,CAA7B;;IACAJ,MAAM,CAACK,OAAP,GAAkBC,KAAD,IAAWP,MAAM,CAACO,KAAD,CAAlC;EACD,CALD,CADF;;EAQA,IAAIC,IAAI,GAAG;IACTC,YAAY,EAAE,kBADL;IAETC,SAAS,EAAE,MAAMd,QAAQ,CAACP,aAAD;EAFhB,CAAX,CAT6C,CAc/C;EACA;EACA;EACA;EACA;EACA;EACA;;EACIsB,KAAK,CAACC,GAAN,CAAW,gCAAX,EACA;EACA;EACA;EAHA,CAICC,IAJD,CAIM,MAAOC,GAAP,IAAe;IACnB,IAAIC,OAAO,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAApB,CADmB,CAErB;;IACEvB,OAAO,CAACC,GAAR,CAAY,SAAZ;EACD,CARD,EASCuB,KATD,CASQV,KAAD,IAAW;IAChBd,OAAO,CAACC,GAAR,CAAYa,KAAZ;IACAd,OAAO,CAACC,GAAR,CAAY,gBAAZ;EACD,CAZD;AAaH;;AAED,eAAeT,WAAf"},"metadata":{},"sourceType":"module"}