{"ast":null,"code":"var _jsxFileName = \"/Users/adish/Desktop/Athelas-Coding-Test/Frontend/src/UploadImage.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadImage(props) {\n  _s();\n\n  const [image, changeImage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"myFile\",\n      name: \"filename\",\n      accept: \"image/*\",\n      onChange: e => handleProfileImageUpload(e, changeImage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), image != \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadImage, \"SlYEXq8F8DgvLk56LCRaevQ+5kk=\");\n\n_c = UploadImage;\n\nfunction handleProfileImageUpload(e, changeImage) {\n  let selectedImage = e.target.files[0];\n  changeImage(URL.createObjectURL(selectedImage));\n  saveProfileImage(selectedImage); //   if (selectedImage.size > 5000000) {\n  //     console.log(\"image too big\");\n  //   } else {\n  //     saveProfileImage(selectedImage);\n  //   }\n}\n\nasync function saveProfileImage(selectedImage) {\n  const toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n\n  let data = {\n    requestedAPI: \"saveProfileImage\",\n    imageFile: await toBase64(selectedImage)\n  }; //   await fetch(\"/api/endpoint\", {\n  //     method: \"POST\",\n  //     headers: new Headers({\n  //       \"Content-Type\": \"application/json\",\n  //     }),\n  //     body: JSON.stringify(data),\n  //   })\n\n  axios.post(`http://localhost:3001/uploadImage`, {\n    data: data\n  }) // .then(res => {\n  //     console.log(res.data)\n  // })\n  .then(async res => {\n    let resJSON = await res.data;\n    console.log(resJSON); //   let url = resJSON.url;\n\n    console.log(\"success\");\n  }).catch(error => {\n    console.log(error);\n    console.log(\"upload failed.\");\n  });\n}\n\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["axios","useState","UploadImage","props","image","changeImage","e","handleProfileImageUpload","selectedImage","target","files","URL","createObjectURL","saveProfileImage","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","data","requestedAPI","imageFile","post","then","res","resJSON","console","log","catch"],"sources":["/Users/adish/Desktop/Athelas-Coding-Test/Frontend/src/UploadImage.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction UploadImage(props) {\n  const [image, changeImage] = useState(\"\");\n  return (\n    <div>\n      <input\n        type=\"file\"\n        id=\"myFile\"\n        name=\"filename\"\n        accept=\"image/*\"\n        onChange={(e) => handleProfileImageUpload(e, changeImage)}\n      />\n      {image != \"\" && <img src={image} />}\n    </div>\n  );\n}\n\nfunction handleProfileImageUpload(e, changeImage) {\n  let selectedImage = e.target.files[0];\n  changeImage(URL.createObjectURL(selectedImage));\n  saveProfileImage(selectedImage);\n  //   if (selectedImage.size > 5000000) {\n  //     console.log(\"image too big\");\n  //   } else {\n  //     saveProfileImage(selectedImage);\n  //   }\n}\n\nasync function saveProfileImage(selectedImage) {\n  const toBase64 = (file) =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n\n  let data = {\n    requestedAPI: \"saveProfileImage\",\n    imageFile: await toBase64(selectedImage),\n  };\n\n  //   await fetch(\"/api/endpoint\", {\n  //     method: \"POST\",\n  //     headers: new Headers({\n  //       \"Content-Type\": \"application/json\",\n  //     }),\n  //     body: JSON.stringify(data),\n  //   })\n  axios\n    .post(`http://localhost:3001/uploadImage`, {data: data})\n    // .then(res => {\n    //     console.log(res.data)\n    // })\n    .then(async (res) => {\n      let resJSON = await res.data;\n      console.log(resJSON);\n      //   let url = resJSON.url;\n      console.log(\"success\");\n    })\n    .catch((error) => {\n      console.log(error);\n      console.log(\"upload failed.\");\n    });\n}\n\nexport default UploadImage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EAC1B,MAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBJ,QAAQ,CAAC,EAAD,CAArC;EACA,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,EAAE,EAAC,QAFL;MAGE,IAAI,EAAC,UAHP;MAIE,MAAM,EAAC,SAJT;MAKE,QAAQ,EAAGK,CAAD,IAAOC,wBAAwB,CAACD,CAAD,EAAID,WAAJ;IAL3C;MAAA;MAAA;MAAA;IAAA,QADF,EAQGD,KAAK,IAAI,EAAT,iBAAe;MAAK,GAAG,EAAEA;IAAV;MAAA;MAAA;MAAA;IAAA,QARlB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAdQF,W;;KAAAA,W;;AAgBT,SAASK,wBAAT,CAAkCD,CAAlC,EAAqCD,WAArC,EAAkD;EAChD,IAAIG,aAAa,GAAGF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB;EACAL,WAAW,CAACM,GAAG,CAACC,eAAJ,CAAoBJ,aAApB,CAAD,CAAX;EACAK,gBAAgB,CAACL,aAAD,CAAhB,CAHgD,CAIhD;EACA;EACA;EACA;EACA;AACD;;AAED,eAAeK,gBAAf,CAAgCL,aAAhC,EAA+C;EAC7C,MAAMM,QAAQ,GAAIC,IAAD,IACf,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC/B,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;IACAD,MAAM,CAACE,aAAP,CAAqBN,IAArB;;IACAI,MAAM,CAACG,MAAP,GAAgB,MAAML,OAAO,CAACE,MAAM,CAACI,MAAR,CAA7B;;IACAJ,MAAM,CAACK,OAAP,GAAkBC,KAAD,IAAWP,MAAM,CAACO,KAAD,CAAlC;EACD,CALD,CADF;;EAQA,IAAIC,IAAI,GAAG;IACTC,YAAY,EAAE,kBADL;IAETC,SAAS,EAAE,MAAMd,QAAQ,CAACN,aAAD;EAFhB,CAAX,CAT6C,CAc7C;EACA;EACA;EACA;EACA;EACA;EACA;;EACAR,KAAK,CACF6B,IADH,CACS,mCADT,EAC6C;IAACH,IAAI,EAAEA;EAAP,CAD7C,EAEE;EACA;EACA;EAJF,CAKGI,IALH,CAKQ,MAAOC,GAAP,IAAe;IACnB,IAAIC,OAAO,GAAG,MAAMD,GAAG,CAACL,IAAxB;IACAO,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAFmB,CAGnB;;IACAC,OAAO,CAACC,GAAR,CAAY,SAAZ;EACD,CAVH,EAWGC,KAXH,CAWUV,KAAD,IAAW;IAChBQ,OAAO,CAACC,GAAR,CAAYT,KAAZ;IACAQ,OAAO,CAACC,GAAR,CAAY,gBAAZ;EACD,CAdH;AAeD;;AAED,eAAehC,WAAf"},"metadata":{},"sourceType":"module"}